---
- block:
  - name: generate ACL master token
    command: "echo {{ ansible_date_time.iso8601_micro | to_uuid }}"
    register: consul_acl_master_token_keygen
    run_once: true
  - name: Save ACL master yoken
    set_fact:
      consul_acl_master_token: "{{ consul_acl_master_token_keygen.stdout }}"
  when: consul_acl_master_token is not defined and not bootstrap_marker.stat.exists

- name: display ACL Master Token
  debug: msg="{{ consul_acl_master_token }}"
  run_once: True
  when: consul_acl_master_token_display

- block:
  - name: generate ACL replication token
    command: "echo {{ ansible_date_time.iso8601_micro | to_uuid }}"
    register: consul_acl_replication_token_keygen
    run_once: true
  - name: Save ACL replication yoken
    set_fact:
      consul_acl_replication_token: "{{ consul_acl_replication_token_keygen.stdout }}"
  when: (consul_acl_replication_token is not defined or consul_acl_replication_token == '') and not bootstrap_marker.stat.exists

- name: display ACL Replication Token
  debug:
    msg: "{{ consul_acl_replication_token }}"
  run_once: True
  when: consul_acl_replication_token_display

- name: ACL bootstrap configuration
  template:
    src: config_acl.json.j2
    dest: "{{ consul_config_path }}/{{ item }}/config_acl.json"
    owner: "{{ consul_user }}"
    group: "{{ consul_group}}"
  with_items:
    - bootstrap
    - client
    - server
  notify:
    - restart consul

- name: ACL policy configuration
  template:
    src: config_acl_policy.hcl.j2
    dest: "{{ consul_config_path }}/{{ item }}/config_acl_policy.hcl"
    owner: "{{ consul_user }}"
    group: "{{ consul_group}}"
  with_items:
    - bootstrap
    - client
    - server
  notify:
    - restart consul